# Generated by Django 5.2 on 2025-05-17 22:37

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('exercise_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('instructions', models.TextField(blank=True, null=True)),
                ('video_link', models.URLField(blank=True, null=True)),
                ('muscles', models.TextField(blank=True, null=True)),
                ('purpose', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'exercise',
            },
        ),
        migrations.CreateModel(
            name='PersonalPlan',
            fields=[
                ('plan_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('goal', models.TextField(blank=True, null=True)),
                ('training_frequency', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
            ],
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('trainer_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('muscle_activity', models.TextField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('images', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'trainer',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Електронна пошта')),
                ('login', models.CharField(max_length=50, unique=True, verbose_name='Логін')),
                ('age', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(13, message='Вік повинен бути не менше 13 років'), django.core.validators.MaxValueValidator(120, message='Вік повинен бути не більше 120 років')], verbose_name='Вік')),
                ('weight', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(30, message='Вага повинна бути не менше 30 кг'), django.core.validators.MaxValueValidator(300, message='Вага повинна бути не більше 300 кг')], verbose_name='Вага (кг)')),
                ('height', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(100, message='Зріст повинен бути не менше 100 см'), django.core.validators.MaxValueValidator(250, message='Зріст повинен бути не більше 250 см')], verbose_name='Зріст (см)')),
                ('settings_id', models.IntegerField(blank=True, null=True, verbose_name='ID налаштувань')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Користувач',
                'verbose_name_plural': 'Користувачі',
                'ordering': ['email'],
                'swappable': 'AUTH_USER_MODEL',
            },
        ),
        migrations.CreateModel(
            name='MediaFiles',
            fields=[
                ('media_id', models.AutoField(primary_key=True, serialize=False)),
                ('link', models.URLField()),
                ('format', models.CharField(choices=[('image', 'Image'), ('video', 'Video'), ('gif', 'GIF')], max_length=50)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercise_media', to='api.exercise')),
            ],
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('settings_id', models.AutoField(primary_key=True, serialize=False)),
                ('interface_language', models.CharField(blank=True, max_length=50, null=True)),
                ('notifications', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_settings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='exercise',
            name='trainer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trainer_exercises', to='api.trainer'),
        ),
        migrations.CreateModel(
            name='ExercisesInPlans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercise_plans', to='api.exercise')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_exercises', to='api.personalplan')),
            ],
            options={
                'unique_together': {('exercise', 'plan')},
            },
        ),
        migrations.CreateModel(
            name='PersonalUserPlans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_users', to='api.personalplan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_plans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('plan', 'user')},
            },
        ),
    ]
